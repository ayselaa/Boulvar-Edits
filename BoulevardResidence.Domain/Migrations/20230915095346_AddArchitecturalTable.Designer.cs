// <auto-generated />
using System;
using BoulevardResidence.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoulevardResidence.Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230915095346_AddArchitecturalTable")]
    partial class AddArchitecturalTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.ArchitecturalElegances.Architectural", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Architecturals");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.ArchitecturalElegances.ArchitecturalTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArchitecturalId")
                        .HasColumnType("integer");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LangCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArchitecturalId");

                    b.ToTable("ArchitecturalTranslates");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Contacts.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Infrastructures.Infrastructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Infrastructures");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Infrastructures.InfrastructureTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InfrastructureId")
                        .HasColumnType("integer");

                    b.Property<string>("LangCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InfrastructureId");

                    b.ToTable("InfrastructureTranslates");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Sliders.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.ArchitecturalElegances.ArchitecturalTranslate", b =>
                {
                    b.HasOne("BoulevardResidence.Domain.Entity.ArchitecturalElegances.Architectural", null)
                        .WithMany("ArchitecturalTranslates")
                        .HasForeignKey("ArchitecturalId");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Infrastructures.InfrastructureTranslate", b =>
                {
                    b.HasOne("BoulevardResidence.Domain.Entity.Infrastructures.Infrastructure", null)
                        .WithMany("InfrastructureTranslates")
                        .HasForeignKey("InfrastructureId");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.ArchitecturalElegances.Architectural", b =>
                {
                    b.Navigation("ArchitecturalTranslates");
                });

            modelBuilder.Entity("BoulevardResidence.Domain.Entity.Infrastructures.Infrastructure", b =>
                {
                    b.Navigation("InfrastructureTranslates");
                });
#pragma warning restore 612, 618
        }
    }
}
